<!-- ========================  MAP FROM MAPBOX -->
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.js'></script>
 <script src='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.js'></script>

<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.css' rel='stylesheet' />

 <!-- /*<style>
     body { margin:0; padding:0; }
     #map { position:absolute; top:0; bottom:0; width:100%; opacity: 0.4; transition: 1s;}
 </style>*/ -->

 <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v2.2.0/mapbox-gl-directions.js'></script>
 <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v2.2.0/mapbox-gl-directions.css' type='text/css' />


<div class="location">
  <div class="map-holder">

      <div class="map-left">
<!-- .........................   MAP on the page-->
         <div id='map' class='map pad2'></div>
<!-- .........................   MAP on the page-->
      </div>


      <div class="map-right">
          <div class="map-nav">
          </div>
          <div id='features'>
            <section class='map-information  active' id='weather'>
              <!-- <section class="map-information active" id="event-location"> -->
                <h3>Current weather in Melbourne</h3>
                <!-- ========================  WEATHER  -->
                <div class = "weather">
                  <div id="cont_dfd3f2cd6bbd804bf063752d7f93c3e7"></div>
                </div>
                <script type="text/javascript" async src="https://www.theweather.com/wid_loader/dfd3f2cd6bbd804bf063752d7f93c3e7"></script>
                <!-- ========================  WEATHER  -->
            </section>
            <section class="map-information" id="legend">
                <h3>Legend</h3>
                <p> üî¥ - WDI Conference </p>
                <p> üåï - Parking Spots </p>
                <p> üíô - Current Location </p>
                <p> üíú - Destination </p>
                <p> üç¥ üéà After Events </p>
            </section>
            <section class="map-information" id="parking">
                <h3>Parking Spots</h3>
                <p>Hover over </p>
                <p>üåï</p>
                <p>to see parking details</p>
            </section>
            <section class="map-information" id="wdi-after-events">
                <h3>After Events</h3>
                <p>Hover over üç¥ üéà </p>
                <p>to see event details</p>
                <br>
                <p>Options: </p>
                <p>1. Dinner @ Attica</p>
                <p>2. Dinner @ Crown</p>
                <p>3. Party @ Bond</p>
            </section>
          </div>
        </div>
  </div>
</div>




<!-- ========================  MAP FROM MAPBOX  script-->
<script>

mapboxgl.accessToken = 'pk.eyJ1IjoibWFnZGFsZW5hYmlhbG9uIiwiYSI6ImNpc2p3cnUwczAycXcyem9jYXpzZWZ6eW4ifQ.RWDUb9U9vdUlNuKcPGJDhg';

   var map = new mapboxgl.Map({
       container: 'map',
      //  style: 'mapbox://styles/mapbox/streets-v9',
       style: 'mapbox://styles/mapbox/dark-v9',
       center: [144.958998, -37.818535],
       zoom: 13
   });



   // ========================= Map Movement on Scroll
 var chapters = {

   'weather': {
      duration: 6000,
      center: [144.958998, -37.818535],
      pitch: 0,
      bearing: -20,
      zoom: 12,
      pitch: 50
   },
   'legend': {
      duration: 6000,
      center: [144.959810, -37.821799],
      bearing: -30,
      zoom: 15,
      pitch: 20
   },
   'parking': {
      duration: 6000,
      bearing: 180,
      center: [144.958998, -37.818535],
      zoom: 15,
      speed: 0.6,
      pitch: 55
   },
   'wdi-after-events': {
      bearing: 10,
      center: [144.983181, -37.855259],
      zoom: 12.2,
      speed: 0.6,
      pitch: 25
   },
 };



 function isOnScreen(element){

   var element = $(element);
   var win = $(window);
   var viewport = {

     top : win.scrollTop(),
     left : win.scrollLeft()

   };

   viewport.bottom = viewport.top + (win.height()/2);
   var bounds = element.offset();
   bounds.bottom = bounds.top + element.outerHeight();
   return !(viewport.bottom < bounds.top || viewport.top > bounds.bottom - (win.height()/2));

 }




   map.addControl(new mapboxgl.Directions());


   var directions = new mapboxgl.Directions({
     unit: 'metric', // Use the metric system to display distances.
     profile: 'driving', // Set the initial profile to walking.
     container: 'directions', // Specify an element thats not the map container.
     proximity: [144.96, -37.82] // Give search results closer to these coordinates higher priority.
   });






  map.on('load', function() {


    // ========================= MAP ON SCROLL

   $(window).scroll(function() {
     var mapStates = ['weather', 'legend', 'parking', 'wdi-after-events' ];

     for(var g = 0; g < mapStates.length; g++) {

       var currentState = mapStates[g]
       if ( isOnScreen( $('#' + currentState) ) === true) {

         map.flyTo( chapters[currentState] );

       }
     }
   });


//============================= FADE LEGEND when not active
  //   var activeChapterName = 'weather';
  //   function setActiveChapter(chapterName) {
  //   if (chapterName === activeChapterName) return;
  //
  //   map.flyTo(chapters[chapterName]);
  //
  //   document.getElementById(chapterName).setAttribute('class', 'active');
  //   document.getElementById(activeChapterName).setAttribute('class', '');
  //
  //   activeChapterName = chapterName;
  // }





    //========================= GA-conf   &  after Events / locations and logo
    var gaConf =

          {
            type: "FeatureCollection",
            features: [
              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.958998,
                    -37.818535
                  ]
                },
                "properties": {
                  "event": "WDI Conference 2016",
                  "website": "https://generalassemb.ly/",
                  "address": "12A/Williams St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "10am - 6pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(/images/ga_logo.png)"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.997320,
                    -37.876840
                  ]
                },
                "properties": {
                  "event": "After Conference Dinner",
                  "website": "http://www.attica.com.au",
                  "address": "74 Glen Eira Rd",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "7pm - 10pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(/images/dinner_icon.png)"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.957268,
                    -37.823716
                  ]
                },
                "properties": {
                  "event": "After Conference Dinner",
                  "website": "https://www.crownmelbourne.com.au/",
                  "address": "130/8 Whiteman St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "7pm - 11pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(/images/dinner_icon.png)"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.963095,
                    -37.818055
                  ]
                },
                "properties": {
                  "event": "After Conference Party",
                  "website": "http://www.bondmelbourne.com.au/",
                  "address": "24 Bond St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "10pm - up to 6am",
                  "iconSize": [25, 25],
                  "iconImage": "url(/images/event_icon.png)"
                }
              },

            ]
          }

      map.addSource("places", {
        "type": "geojson",
        "data": gaConf
      });


      gaConf.features.forEach(function(marker_ga) {
        // Create a div element for the marker_ga
        var ga_logo = document.createElement('div');



        // Add a class called 'marker_ga' ga_icon to each div
        ga_logo.className = 'ga_icon popup';
        // // By default the image for your custom marker_ga will be anchored by its top left corner. Adjust the position accordingly
        ga_logo.style.left='-28px';
        ga_logo.style.top='-6px';

        ga_logo.style.backgroundImage = marker_ga.properties.iconImage;
        ga_logo.style.width = marker_ga.properties.iconSize[0] + 'px';
        ga_logo.style.height = marker_ga.properties.iconSize[1] + 'px';






        // Create the custom marker_ga, set their position, and add to map
        var markerGA = new mapboxgl.Marker(ga_logo)
            .setLngLat(marker_ga.geometry.coordinates)
            .addTo(map);



        ga_logo.addEventListener('mouseenter', function(event) {
          //  window.alert("Website: " + marker_ga.properties.website + " | Conference date: " + marker_ga.properties.date_of_conf);

            //create span with the message inside the popup
            var span = document.createElement('span');
            span.className = 'popuptext';
            span.id = 'myPopup';

            var t = document.createTextNode(marker_ga.properties.event + " ‚è≥ " + marker_ga.properties.time + " üìÖ " + marker_ga.properties.date_of_conf + " üè¢ " + marker_ga.properties.address);
            span.appendChild(t)


            ga_logo.appendChild(span)
            // console.log(span)

            //once ga_logo was clicked toggle popup and show it
            var $popup = $(event.target);
            $popup.find('#myPopup').addClass('show');

        });

        ga_logo.addEventListener('mouseout', function(event) {
          var $popup = $(event.target);
           $popup.find('#myPopup').removeClass('show')
        })


      });





      // ===========================  parking locations
      $.ajax({
        url: "https://data.melbourne.vic.gov.au/resource/9xmh-yeh2.json",
        type: "GET",
        data: {
          "$limit" : 800,
          "$$app_token" : "q0QvItQ7Te62kF5Yr2ebfoeNs"
        }
      }).done(function(data) {


          var geojson = {
            type: 'FeatureCollection',
            features: []
          };

          data.forEach(function(e) {
            geojson.features.push({
              type: 'Feature',
              properties: {
                "parking_type": e.parking_type,
                "number_of_spaces": e.parking_spaces,
                "iconSize": [10, 10]
              },
              geometry: {
                "type": "Point",
                "coordinates": [
                  e.x_coordinate.coordinates[0],
                  e.x_coordinate.coordinates[1],
                ]
              }
            });
          // console.log(e.x_coordinate.coordinates)
          });

          geojson.features.forEach(function(marker) {

              // create a DOM element for the marker
              var el = document.createElement('div');
              el.className = 'parking-icon icon-dc popupParking';

              var t = document.createTextNode("p");
              el.appendChild(t);



              el.addEventListener('mouseenter', function(event) {

              //create span with the message inside the popup
                  var span = document.createElement('span');
                  span.className = 'popuptextParking';
                  span.id = 'myPopupParking';

                  var t = document.createTextNode("Parking type: " + marker.properties.parking_type + " üöó . Number of spaces: " + marker.properties.number_of_spaces);
                  span.appendChild(t)
                  el.appendChild(span)

                  //once parking logo was hovered toggle popup and show it  //1.find the mouse event - div, go down and find element with id, add to this particular one class
                  var $popupPrk = $(event.target);
                  $popupPrk.find('#myPopupParking').addClass('show');
              });


              el.addEventListener('mouseout', function(event) {
                var $popupPrk = $(event.target);
                $popupPrk.find('#myPopupParking').removeClass('show')
              });


            // add marker to map
            new mapboxgl.Marker(el, {offset: [-marker.properties.iconSize[0] / 2, -marker.properties.iconSize[1] / 2]})
                .setLngLat(marker.geometry.coordinates)
                .addTo(map);
        });

      })




       // ===========================  autolocation
       navigator.geolocation.getCurrentPosition(function(geo) {
        // console.log(geo)
        $('#map').css({
          'opacity': '1'
        });
        // $('#mapbox-directions-origin-input , #mapbox-directions-destination-input, .mapbox-form-label, .js-reverse-inputs').css({
        //   'display': 'none'
        // });
        // $('.mapbox-directions-component mapbox-directions-inputs').hide();
         directions.setOrigin([ geo.coords.longitude, geo.coords.latitude ]);
         directions.setDestination([144.958998, -37.818535]);    // On load, set the origin to GA Melbourne
       });

  });






// ===========================  directions
   directions.on('route', function(e) {
    //  console.log(e.route); // Logs the current route shown in the interface.
  //  map.setZoom(13);
     map.scrollZoom.disable();

     function flyToLocation(currentFeature) {
        map.flyTo({
          center: currentFeature.geometry.coordinates,
          zoom: 12
        });
      }
   });


   map.addControl(new mapboxgl.Navigation());


</script>
<!-- ========================  MAP FROM MAPBOX  script-->
