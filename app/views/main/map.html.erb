<!-- ========================  MAP FROM MAPBOX -->
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.js'></script>
 <script src='https://api.mapbox.com/mapbox.js/v2.4.0/mapbox.js'></script>

<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.css' rel='stylesheet' />

 <!-- /*<style>
     body { margin:0; padding:0; }
     #map { position:absolute; top:0; bottom:0; width:100%; opacity: 0.4; transition: 1s;}
 </style>*/ -->

 <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v2.2.0/mapbox-gl-directions.js'></script>
 <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v2.2.0/mapbox-gl-directions.css' type='text/css' />





<!-- .........................   MAP on the page-->
 <div id='map' class='map pad2'></div>

<!-- .........................   MAP on the page-->





<!-- ========================  MAP FROM MAPBOX  script-->
<script>
mapboxgl.accessToken = 'pk.eyJ1IjoibWFnZGFsZW5hYmlhbG9uIiwiYSI6ImNpc2p3cnUwczAycXcyem9jYXpzZWZ6eW4ifQ.RWDUb9U9vdUlNuKcPGJDhg';

   var map = new mapboxgl.Map({
       container: 'map',
      //  style: 'mapbox://styles/mapbox/streets-v9',
       style: 'mapbox://styles/mapbox/dark-v9',
       center: [144.958998, -37.818535],
       zoom: 13
   });


   map.addControl(new mapboxgl.Directions());


   var directions = new mapboxgl.Directions({
     unit: 'metric', // Use the metric system to display distances.
     profile: 'driving', // Set the initial profile to walking.
     container: 'directions', // Specify an element thats not the map container.
     proximity: [144.96, -37.82] // Give search results closer to these coordinates higher priority.
   });






  map.on('load', function() {



    //========================= GA-conf logo / location
    var gaConf =

          {
            type: "FeatureCollection",
            features: [
              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.958998,
                    -37.818535
                  ]
                },
                "properties": {
                  "event": "WDI Conference 2016",
                  "website": "https://generalassemb.ly/",
                  "address": "12A/Williams St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "10am - 6pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(https://placekitten.com/g/"
                  // "iconImage":"url(/images/ga_logo.png)"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.997320,
                    -37.876840
                  ]
                },
                "properties": {
                  "event": "After Conference Dinner",
                  "website": "http://www.attica.com.au",
                  "address": "74 Glen Eira Rd",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "7pm - 10pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(https://placekitten.com/g/"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.957268,
                    -37.823716
                  ]
                },
                "properties": {
                  "event": "After Conference Dinner",
                  "website": "https://www.crownmelbourne.com.au/",
                  "address": "130/8 Whiteman St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "7pm - 11pm",
                  "iconSize": [25, 25],
                  "iconImage":"url(https://placekitten.com/g/"
                }
              },

              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    144.963095,
                    -37.818055
                  ]
                },
                "properties": {
                  "event": "After Conference Party",
                  "website": "http://www.bondmelbourne.com.au/",
                  "address": "24 Bond St",
                  "city": "Melbourne Vic",
                  "country": "Australia",
                  "date_of_conf": "19 Dec 2017",
                  "time": "10pm - up to 6am",
                  "iconSize": [25, 25],
                  // "iconImage":"url(https://placekitten.com/g/"
                }
              },

            ]
          }

      map.addSource("places", {
        "type": "geojson",
        "data": gaConf
      });


      gaConf.features.forEach(function(marker_ga) {
        // Create a div element for the marker_ga
        var ga_logo = document.createElement('div');



        // Add a class called 'marker_ga' ga_icon to each div
        ga_logo.className = 'ga_icon popup';
        // // By default the image for your custom marker_ga will be anchored by its top left corner. Adjust the position accordingly
        ga_logo.style.left='-28px';
        ga_logo.style.top='-6px';

        ga_logo.style.backgroundImage = marker_ga.properties.iconImage + marker_ga.properties.iconSize.join('/') + '/)';
        ga_logo.style.width = marker_ga.properties.iconSize[0] + 'px';
        ga_logo.style.height = marker_ga.properties.iconSize[1] + 'px';






        // Create the custom marker_ga, set their position, and add to map
        var markerGA = new mapboxgl.Marker(ga_logo)
            .setLngLat(marker_ga.geometry.coordinates)
            .addTo(map);

        // map.addLayer({
        //   "id": "locations",
        //   "type": "symbol",
        //   "source": "places",
        //   "layout": {
        //     "icon-image": "restaurant-15",
        //     "icon-allow-overlap": true,
        //   }
        // });


        ga_logo.addEventListener('mouseenter', function(event) {
          //  window.alert("Website: " + marker_ga.properties.website + " | Conference date: " + marker_ga.properties.date_of_conf);

            //create span with the message inside the popup
            var span = document.createElement('span');
            span.className = 'popuptext';
            span.id = 'myPopup';

            var t = document.createTextNode(marker_ga.properties.event + " ‚è≥ " + marker_ga.properties.time + " üìÖ " + marker_ga.properties.date_of_conf + " üè¢ " + marker_ga.properties.address);
            span.appendChild(t)


            ga_logo.appendChild(span)
            // console.log(span)

            //once ga_logo was clicked toggle popup and show it
            var $popup = $(event.target);
            $popup.find('#myPopup').addClass('show');

        });

        ga_logo.addEventListener('mouseout', function(event) {
          var $popup = $(event.target);
           $popup.find('#myPopup').removeClass('show')
        })


      });





      //========================= AfterEvents locations
      // var afterEvents =

        // {
        //   type: "FeatureCollection",
        //   features: [
        //     {
        //       "type": "Feature",
        //       "geometry": {
        //         "type": "Point",
        //         "coordinates": [
        //           144.957455,
        //           -37.814398
        //
        //         ]
        //       },
        //       "properties": {
        //         "event": "Dinner",
        //         "website": "http://www.vuedemonde.com.au/",
        //         "address": "Rialto Towers, 525 Collins St",
        //         "city": "Melbourne Vic",
        //         "country": "Australia",
        //         "date_of_conf": "19 Dec 2017",
        //         "time": "7pm - 10pm"
        //       }
        //     },
        //
        //     {
        //       "type": "Feature",
        //       "geometry": {
        //         "type": "Point",
        //         "coordinates": [
        //           144.959495,
        //           -37.819297
        //         ]
        //       },
        //       "properties": {
        //         "event": "Dinner",
        //         "website": "https://www.crownmelbourne.com.au/restaurants/premium/dinner-by-heston-blumenthal?utm_source=google&utm_medium=organic&utm_content=dinner%20by%20heston%20blumenthal&utm_campaign=Google%20Places",
        //         "address": "Crown, 130/8 Whiteman St, Southbank",
        //         "city": "Melbourne Vic",
        //         "country": "Australia",
        //         "date_of_conf": "19 Dec 2017",
        //         "time": "7pm - 11pm"
        //       }
        //     },
        //
        //     {
        //       "type": "Feature",
        //       "geometry": {
        //         "type": "Point",
        //         "coordinates": [
        //           144.963095,
        //           -37.818055
        //         ]
        //       },
        //       "properties": {
        //         "event": "After Party",
        //         "website": "http://www.bondmelbourne.com.au/",
        //         "address": "24 Bond St,",
        //         "city": "Melbourne Vic",
        //         "country": "Australia",
        //         "date_of_conf": "19 Dec 2017",
        //         "time": "10pm - up to 6am"
        //       }
        //     },
        //
        //   ]
        // }

        // map.addSource("places", {
        //   "type": "geojson",
        //   "data": afterEvents
        // });


        // afterEvents.features.forEach(function(marker_event) {
        //   // Create a div element for the after_events
        //   var after_events = document.createElement('div');
        //   // Add a class called 'marker_event' ga_icon to each div
        //   after_events.className = 'event_icon popupEvent';
        //   // By default the image for your custom marker_event will be anchored by its top left corner. Adjust the position accordingly
        //   after_events.style.left='-28px';
        //   after_events.style.top='-46px';
        //
        //
        //
        //   // Create the custom marker_events, set their position, and add to map
        //   var markerEvent = new mapboxgl.Marker(after_events)
        //       .setLngLat(marker_event.geometry.coordinates)
        //       .addTo(map);
        //
        //
        //   after_events.addEventListener('mouseenter', function(event) {
        //     //  window.alert("Website: " + marker_event.properties.website + " | Conference date: " + marker_event.properties.date_of_conf);
        //
        //       //create span with the message inside the popup
        //       var span = document.createElement('span');
        //       span.className = 'popuptextEvent';
        //       span.id = 'myPopupEvent';
        //
        //       var t = document.createTextNode("After Event:  " + marker_event.properties.date + "  " + marker_event.properties.time + " " + marker_event.properties.website);
        //       span.appendChild(t)
        //
        //
        //       after_events.appendChild(span)
        //       // console.log(span)
        //
        //       //once after_events was clicked toggle popup and show it
        //       var $popupEvent = $(event.target);
        //       $popupEvent.find('#myPopupEvent').addClass('show');
        //
        //   });
        //
        //   after_events.addEventListener('mouseout', function(event) {
        //     var $popupEvent = $(event.target);
        //     $popupEvent.find('#myPopupEvent').removeClass('show')
        //   })
        //
        //
        // });
        //
        //


        //
        //
        // el.addEventListener('mouseout', function(event) {
        //   var $popupPrk = $(event.target);
        //   $popupPrk.find('#myPopupParking').removeClass('show')
        // });





      // ===========================  parking locations
      $.ajax({
        url: "https://data.melbourne.vic.gov.au/resource/9xmh-yeh2.json",
        type: "GET",
        data: {
          "$limit" : 800,
          "$$app_token" : "q0QvItQ7Te62kF5Yr2ebfoeNs"
        }
      }).done(function(data) {


          var geojson = {
            type: 'FeatureCollection',
            features: []
          };

          data.forEach(function(e) {
            geojson.features.push({
              type: 'Feature',
              properties: {
                "parking_type": e.parking_type,
                "number_of_spaces": e.parking_spaces,
                "iconSize": [10, 10]
              },
              geometry: {
                "type": "Point",
                "coordinates": [
                  e.x_coordinate.coordinates[0],
                  e.x_coordinate.coordinates[1],
                ]
              }
            });
          // console.log(e.x_coordinate.coordinates)
          });

          geojson.features.forEach(function(marker) {

              // create a DOM element for the marker
              var el = document.createElement('div');
              el.className = 'parking-icon icon-dc popupParking';

              var t = document.createTextNode("p");
              el.appendChild(t);



              el.addEventListener('mouseenter', function(event) {

              //create span with the message inside the popup
                  var span = document.createElement('span');
                  span.className = 'popuptextParking';
                  span.id = 'myPopupParking';

                  var t = document.createTextNode("Parking type: " + marker.properties.parking_type + " üöó . Number of spaces: " + marker.properties.number_of_spaces);
                  span.appendChild(t)
                  el.appendChild(span)

                  //once parking logo was hovered toggle popup and show it  //1.find the mouse event - div, go down and find element with id, add to this particular one class
                  var $popupPrk = $(event.target);
                  $popupPrk.find('#myPopupParking').addClass('show');
              });


              el.addEventListener('mouseout', function(event) {
                var $popupPrk = $(event.target);
                $popupPrk.find('#myPopupParking').removeClass('show')
              });


            // add marker to map
            new mapboxgl.Marker(el, {offset: [-marker.properties.iconSize[0] / 2, -marker.properties.iconSize[1] / 2]})
                .setLngLat(marker.geometry.coordinates)
                .addTo(map);
        });

      })




       // ===========================  autolocation
       navigator.geolocation.getCurrentPosition(function(geo) {
        // console.log(geo)
        $('#map').css({
          'opacity': '1'
        });
        $('#mapbox-directions-origin-input , #mapbox-directions-destination-input, .mapbox-form-label, .js-reverse-inputs').css({
          'display': 'none'
        });
        // $('.mapbox-directions-component mapbox-directions-inputs').hide();
         directions.setOrigin([ geo.coords.longitude, geo.coords.latitude ]);
         directions.setDestination([144.958998, -37.818535]);    // On load, set the origin to GA Melbourne
       });

  });





// ===========================  directions
   directions.on('route', function(e) {
    //  console.log(e.route); // Logs the current route shown in the interface.
  //  map.setZoom(13);
     map.scrollZoom.disable();

     function flyToLocation(currentFeature) {
        map.flyTo({
          center: currentFeature.geometry.coordinates,
          zoom: 15
        });
      }
   });


   map.addControl(new mapboxgl.Navigation());


</script>
<!-- ========================  MAP FROM MAPBOX  script-->







<!-- ========================  WEATHER  -->
<!-- <div class = "weather">
  <div id="cont_21d71ee597e69cbb9fd0e2e85960b55e"></div>
</div>
<script type="text/javascript" async src="https://www.theweather.com/wid_loader/21d71ee597e69cbb9fd0e2e85960b55e"></script> -->
<!-- ========================  WEATHER  -->
